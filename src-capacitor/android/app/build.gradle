
plugins {
  id 'com.android.application'
  id 'androidx.navigation.safeargs'
  id 'kotlin-android'
  id 'kotlin-kapt'
  id 'dagger.hilt.android.plugin'
  id 'kotlin-parcelize'
}

// get app version
def app_version = getProperties('version.properties')
def version_code = app_version['VERSION_CODE'].toInteger()
def version_name = app_version['VERSION_MAJOR'] + "." + app_version['VERSION_MINOR'] + "." + app_version['VERSION_CODE']

android {
    namespace "com.mymanu.companionapp"
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.mymanu.companionapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode version_code
        versionName version_name

        buildConfigField "boolean", "UPGRADE_DEVELOPER_OPTIONS", "false"
        buildConfigField "String", "SERVICE_BASE_URL", "\"http://the.server.url\""
        buildConfigField "String", "SERVICE_TOKEN", "\"the_token\""
        buildConfigField "boolean", "SERVICE_LOGGING", "false"
        buildConfigField "boolean", "SERVICE_AVAILABILITY", "false"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    buildFeatures {
      dataBinding = true
      buildConfig = true
    }

    compileOptions {
      sourceCompatibility = JavaVersion.VERSION_17
      targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
      jvmTarget = "17"
    }

//    java {
//      toolchain {
//        languageVersion.set(JavaLanguageVersion.of(17))
//      }
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:1.2.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.6.1"
    implementation project(':capacitor-cordova-android-plugins')

    implementation 'com.squareup.okhttp:okhttp:2.7.2'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
  //  testImplementation 'junit:junit:4.+'
  //  androidTestImplementation 'androidx.test.ext:junit:1.1.1'
  //  androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "androidx.core:core-ktx:1.13.1"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.4"
    implementation "androidx.navigation:navigation-fragment-ktx:2.7.7"
    implementation "androidx.navigation:navigation-ui-ktx:2.7.7"
    implementation "androidx.preference:preference-ktx:1.2.1"
    implementation "androidx.recyclerview:recyclerview:1.3.2"
    implementation "com.google.android.material:material:1.12.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.10"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.10.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    // automated dependencies injections
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-android-compiler:2.38.1"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.2.0" // Kotlin
    annotationProcessor "androidx.hilt:hilt-compiler:1.2.0" // Java

    implementation files('libDeviceControl-debug.aar')

    // modules
    implementation project(':app-core')
    implementation project(':lib-upgrade')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}

/**
 * Load the given file as properties.
 *
 * @return a Properties object which contains the properties from the given file path.
 */
def getProperties(String filePath) {
  def propertiesFile = file(filePath)

  if (propertiesFile.canRead()) {
    Properties properties = new Properties()
    FileInputStream file = new FileInputStream(propertiesFile)
    properties.load(file)
    file.close()
    return properties
  } else {
    throw new GradleException("getProperties(): could not read " + filePath)
  }
}
